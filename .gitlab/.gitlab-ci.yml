include:
  - local: '.gitlab/templates.yml'

stages:
  - check
  - build
  - test
  - deploy

workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_REF_PROTECTED == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

variables:
  OSEC_NSPECT_ID: NSPECT-DRJJ-1IL9
  OSEC_SONARQUBE_ENABLED: true
  OSEC_OMNI_SANITIZER_ENABLED: true
  OSEC_CHECKMARX_ENABLED: false
  OSEC_OMNI_PULSE_ENABLED: false

check_code_format:
  extends: [.default_job]
  stage: check
  script:
    - uv run --group dev poe lint

.build_base:
  extends: [.default_job]
  stage: build
  needs: [] # do not wait for checks
  script:
    - uv build
  artifacts:
    paths:
      - dist/

build_linux:
  extends: [.build_base]

build_windows:
  extends: [.build_base, .setup_windows]

.test_base:
  extends: [.default_job]
  stage: test
  script:
    - uv run --group dev poe test-ci
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: .coverage.xml
      junit: .results.xml
    paths:
      - .coverage.xml
      - .results.xml
    expire_in: 1 week

test_linux:
  extends: [.test_base]
  needs: ["build_linux"]

test_windows:
  extends: [.test_base, .setup_windows]
  needs: ["build_windows"]

.deploy_base:
  extends: [.deploy_job]
  stage: deploy
  script:
    - uv publish --index ${ARTIFACTORY_URL} --username ${ARTIFACTORY_USERNAME} --password ${ARTIFACTORY_KEY} --verbose

deploy_tagged:
  extends: [.deploy_base]
  rules:
    - if: $CI_COMMIT_TAG

deploy_preview:
  extends: [.deploy_base]
  when: manual
  rules:
    - if: '$CI_COMMIT_TAG == null && $CI_COMMIT_REF_PROTECTED == "true"'
