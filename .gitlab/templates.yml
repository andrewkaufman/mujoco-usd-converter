include:
  - project: 'omniverse/sectools/vault'
    file: 'templates/v3/linux/artifactory.gitlab-ci.yml'
  - project: 'omniverse/devplat/gitlab/templates/runners'
    file: 'modules/include.yml'
    ref: v2_latest
  - project: 'omniverse/devplat/gitlab/templates/common/compliance'
    file: 'modules/omniverse-repo-compliance.gitlab-ci.yml'
    ref: v1_latest

.setup_linux:
  extends: [.omni_nvks_micro_runner]
  before_script:
    - apt-get install -yq --no-install-recommends curl
    - export UV_INSTALL_DIR="$CI_PROJECT_DIR/uv"
    - curl -LsSf https://astral.sh/uv/install.sh | sh
    - export PATH="$UV_INSTALL_DIR:$PATH"
    - uv venv --managed-python
    - source .venv/bin/activate
    - uv pip install poetry
    - echo "Linux Python/Poetry setup complete."

.setup_windows:
  extends: [.runner-build-windows-x86_64]
  image: null # override the default image from .setup_linux
  before_script:
    - powershell -ExecutionPolicy ByPass -c {$env:UV_INSTALL_DIR = "${env:CI_PROJECT_DIR}\uv";irm https://astral.sh/uv/install.ps1 | iex}
    - $env:Path = "${env:CI_PROJECT_DIR}\uv;$env:Path"
    - uv venv --managed-python
    - .venv/Scripts/activate
    - uv pip install poetry
    - echo "Windows Python/Poetry setup complete."

.default_job:
  extends: [.setup_linux]
  timeout: 10 minutes
  interruptible: true
  # Only retry on Gitlab failures (not on script failures for example)
  retry:
    max: 2
    when:
      - api_failure
      - runner_system_failure
      - stuck_or_timeout_failure
      - scheduler_failure
      - unknown_failure
  artifacts:
    when: always
    expire_in: 2 weeks

.osec:stage_base:
  stage: check # setup all osec jobs as checks

.deploy_job:
  extends: [.default_job, .osec:vault:v3:prod_token_job]
  variables:
    ARTIFACTORY_REPO: "ct-omniverse-pypi"
    ARTIFACTORY_USERNAME: $ARTIFACTORY_USERNAME
    ARTIFACTORY_KEY: $ARTIFACTORY_KEY
    ARTIFACTORY_URL: "https://urm.nvidia.com/artifactory/api/pypi/$ARTIFACTORY_REPO"
  before_script:
    - !reference [.default_job, before_script]
    - !reference [.osec:vault:v3:linux, artifactory:perform_vault_requests]
